from cProfile import label
from tkinter import *
import tkinter.font as font
import time
import random
from unittest import result
from PIL import Image,ImageTk
from tkinter.colorchooser import askcolor
z=0


horrorTheme= False
warTheme = False
westernTheme = False
depressionTheme = False
fantasyTheme = False

"""
madlibHorror
madlibWestern
madlibGreatDepression
madlibWar
madlibFantasy

"""
def goDisplay():
    top2.deiconify()
    top1.withdraw()
    top3.withdraw()
    root.withdraw()
#  command to open display, closes all roots and opens display
def goIntro():
    top2.withdraw()
    top1.deiconify()
    top3.withdraw()
    root.withdraw()
#  command to open Intro, closes all roots and opens Intro   
def goMadlib():
    top2.withdraw()
    top1.withdraw()
    top3.withdraw()
    root.deiconify()
#  command to open Main Page, closes all roots and opens Main Page   
def goEnterMadlib():
    top2.withdraw()
    top1.withdraw()
    top3.deiconify()
    root.withdraw()

def Changebackground():
    result = askcolor(title = "Tkinter background Color Chooser")
    root.config(bg = result[1])
    top1.config(bg = result[1])
    top2.config(bg = result[1])
    top3.config(bg = result[1])
    label2.config(bg = result[1])
    print(result[1])
#  adds a color wheel that sets the background of the pages, and the labels, to the user picked color
def Changetextcolor():
    result = askcolor(title = "Tkinter text Color Chooser")
    Displaylabel.config(fg = result[1])
    introLabel.config(fg = result[1])
    Buttonlabel1.config(fg = result[1])
    Buttonlabel2.config(fg = result[1])
    Buttonlabel3.config(fg = result[1])
    introLabel.config(fg = result[1])
    adjective1label.config(fg = result[1])
    adjective2label.config(fg = result[1])
    adjective3label.config(fg = result[1])
    adverblabel.config(fg = result[1])
    noun1label.config(fg = result[1])
    noun2label.config(fg = result[1])
    noun3label.config(fg = result[1])
    verb1label.config(fg = result[1])
    verb2label.config(fg = result[1])
    emotionlabel.config(fg = result[1])
    place1label.config(fg = result[1])
    verbINGlabel.config(fg = result[1])
    print(result[1])
#  adds a color wheel that sets the background of the pages, and the labels, to the user picked color
def Changetextbackgroundcolor():
    result = askcolor(title = "Tkinter text Color Chooser")
    Displaylabel.config(bg = result[1])
    introLabel.config(bg = result[1])
    Buttonlabel1.config(bg = result[1])
    Buttonlabel2.config(bg = result[1])
    Buttonlabel3.config(bg = result[1])
    adjective1label.config(bg = result[1])
    adjective2label.config(bg = result[1])
    adjective3label.config(bg = result[1])
    adverblabel.config(bg = result[1])
    noun1label.config(bg = result[1])
    noun2label.config(bg = result[1])
    noun3label.config(bg = result[1])
    verb1label.config(bg = result[1])
    verb2label.config(bg = result[1])
    emotionlabel.config(bg = result[1])
    place1label.config(bg = result[1])
    verbINGlabel.config(bg = result[1])
    print(result[1])
def Changebuttonbackgroundcolor():
    result = askcolor(title = "Tkinter background Color Chooser")
    button.config(bg = result[1])
    button1.config(bg = result[1])
    button2.config(bg = result[1])
    button3.config(bg = result[1])
    button4.config(bg = result[1])
    button5.config(bg = result[1])
    button6.config(bg = result[1])
    introbutton.config(bg = result[1])
    print(result[1])
def Changebuttontextcolor():
    result = askcolor(title = "Tkinter text Color Chooser")
    button.config(fg = result[1])
    button1.config(fg = result[1])
    button2.config(fg = result[1])
    button3.config(fg = result[1])
    button4.config(fg = result[1])
    button5.config(fg = result[1])
    button6.config(fg = result[1])
    introbutton.config(fg = result[1])
    print(result[1])
def Changeentrytextcolor():
    result = askcolor(title = "Tkinter text Color Chooser")
    adjective1.config(fg = result[1])
    adjective2.config(fg = result[1])
    adjective3.config(fg = result[1])
    adverb.config(fg = result[1])
    noun1.config(fg = result[1])
    noun2.config(fg = result[1])
    noun3.config(fg = result[1])
    verb1.config(fg = result[1])
    verb2.config(fg = result[1])
    emotion.config(fg = result[1])
    place1.config(fg = result[1])
    verbING.config(fg = result[1])

    print(result[1])
def Changeentrybackgroundcolor():
    result = askcolor(title = "Tkinter text Color Chooser")
    adjective1.config(bg = result[1])
    adjective2.config(bg = result[1])
    adjective3.config(bg = result[1])
    adverb.config(bg = result[1])
    noun1.config(bg = result[1])
    noun2.config(bg = result[1])
    noun3.config(bg = result[1])
    verb1.config(bg = result[1])
    verb2.config(bg = result[1])
    emotion.config(bg = result[1])
    place1.config(bg = result[1])
    verbING.config(bg = result[1])
    print(result[1])

def store():
    global madlibFantasy, madlibGreatDepression, madlibHorror, madlibWar, madlibWestern
    msg = "Please insert TEXT"
    i = adjective1.get()
    y = i.isdigit()

    if y == True or i == '':  # the statement that checks what was entered and adds a text
        adjective1.delete(0, END)
        adjective1.insert(0, msg)
    i2 = adjective2.get()
    y2 = i2.isdigit()

    if y2 == True or i2 == '':  # the statement that checks what was entered and adds a text
        adjective2.delete(0, END)
        adjective2.insert(0, msg)
    i3 = adjective3.get()
    y3 = i3.isdigit()

    if y3 == True or i3 == '':  # the statement that checks what was entered and adds a text
        adjective3.delete(0, END)
        adjective3.insert(0, msg)
    i4 = adverb.get()
    y4 = i4.isdigit()

    if y4 == True or i4 == '':  # the statement that checks what was entered and adds a text
        adverb.delete(0, END)
        adverb.insert(0, msg)
    i5 = noun1.get()
    y5 = i5.isdigit()

    if y5 == True or i5 == '':  # the statement that checks what was entered and adds a text
        noun1.delete(0, END)
        noun1.insert(0, msg)
    i6 = noun2.get()
    y6 = i6.isdigit()

    if y6 == True or i6 == '':  # the statement that checks what was entered and adds a text
        noun2.delete(0, END)
        noun2.insert(0, msg)
    i7 = noun3.get()
    y7 = i7.isdigit()

    if y7 == True or i7 == '':  # the statement that checks what was entered and adds a text
        noun3.delete(0, END)
        noun3.insert(0, msg)
    i8 = verb1.get()
    y8 = i8.isdigit()

    if y8 == True or i8 == '':  # the statement that checks what was entered and adds a text
        verb1.delete(0, END)
        verb1.insert(0, msg)
    i9 = verb2.get()
    y9 = i9.isdigit()

    if y9 == True or i9 == '':  # the statement that checks what was entered and adds a text
        verb2.delete(0, END)
        verb2.insert(0, msg)
    i10 = emotion.get()
    y10 = i10.isdigit()

    if y10 == True or i10 == '':  # the statement that checks what was entered and adds a text
        emotion.delete(0, END)
        emotion.insert(0, msg)
    i11 = place1.get()
    y11= i11.isdigit()

    if y11 == True or i11 == '':  # the statement that checks what was entered and adds a text
        place1.delete(0, END)
        place1.insert(0, msg)
    i12 = verbING.get()
    y12 = i12.isdigit()

    if y12 == True or i12 == '':  # the statement that checks what was entered and adds a text
        verbING.delete(0, END)
        verbING.insert(0, msg)
    madlibHorror = f'On one {i2} night in the town of {i11}, there was an old manor on the hill was haunted by a {i8} ghost. The ghost hold had {i} still left in its mind, \n it was going to let you know it. You {i9} into the manor and see a portrait of a {i3} ghost then {i9} out. now feeling {i10} running through you\n you decide to grab {i6} and proceed to {i9} back into the manor with {i10} {i12} inside you you decide that its all or nothing and start exorcising the ghost\n with a {i7} and an {i6} to protect yourself. after a frightening and scared few minutes the ghost vanishes and is never to be seen again except you dream '
    madlibWestern = f'It is 1869 and the valley of {i11} were filled with the rich {i5} but there was trouble stirring up in the little town of el paso and it was high noon. \n the town was anxious of the {i11} ranger coming to take the {i10} bandit back. And in the Streets the {i11} ranger shot {i10} bandit but he was no match for the\n {i} {i10} bandit and he shot him dead. Then the next day for the fight for {i5} and {i6} the {i10} bandit had to fight 100 more {i11} rangers or he would find himself\n dead with the {i9} of his family off and off away he {i3} drew his big iron. The very enxt day at high noon there he was slooped over on a\n {i7} no breath coming from his lips his {i4} {i9} family mourn but the {i11} rangers won and took the plains for themselves.'
    madlibGreatDepression = f'When times were {i}, and {i5} is low. {i11} was in a dark, dark place. Why? Because of the great {i12}. The economy has completely crashed, \n and everyone was {i2}. Everyone except the {i6}. SIKEE UHHH BIG MONSTER SHOWS UP AND YOU USE A {i2} {i7} TO WALLOP IT INTO THE OCEAN.\n CONGRATS YOU SAVED AN ORPHAN NAMED {i7}!!!! YOU {i9} INTO THE SUN AND {i8} INTO STARDUST!!! BACK ON EARTH EVERYONE IS\n {i12} YOUR BATTLE, THEY FEEL {i10} THINKING ABOUT YOU. THE END.'
    madlibWar = f'During the {i} battle of {i11} the {i8} bombs came and they terrified the whole frontline and trying to protect the {i5} became close to impossible. \n The {i2} regiment had {i9} past the frontline and straight into the enemy.\n Most of the regiment had died but they won and now the {i6} that they tried to protect is\n in danger. Whilst {i12} the reginemnt all felt {i10} and proceeded to {i4} {i8} headfirst into {i7} concluding hte battle and winning the fight without the {i8} bombs going off.'
    madlibFantasy = f'In the lands of {i11} there was once a {i} hero he would be the one destined to save {i11} and defeat the evil warlock who was the most {i2} in all the lands. \n The {i} hero would have to {i9} and {i8} to save everyone.\n On the heroes {i3} adventure he would be caught off gaurd whilst {i12} and the evil warlock would\n {i4} {i9} to put an end to the hero however luckily for the hero his {i10} got the best of him and he instead started {i12} to {i5} but instead found a {i6}\n and used it to stop the evil warlock. In the heros later days he would live a good life in {i11} and have a {i3} {i7} monopoly.'
    Storylabel1.config(text=madlibHorror)
    Storylabel2.config(text=madlibWestern)
    Storylabel3.config(text=madlibGreatDepression)
    Storylabel4.config(text=madlibWar)
    Storylabel5.config(text=madlibFantasy)

def remove_text():
    Storylabel1.pack_forget()
    Storylabel2.pack_forget()
    Storylabel3.pack_forget()
    Storylabel4.pack_forget()
    Storylabel5.pack_forget()



    

def enter(e):
    store()
    moveOn = Button(top3, text= "Move on once you have all your answers!", command=goMadlib,width=35, bg='black', fg='snow')
    moveOn['font'] = myFont
    moveOn.place(x=690,y=1000)

def openWestern():
    westernTheme =True
    horrorTheme = False
    warTheme = False
    depressionTheme = False
    fantasyTheme = False
    Storylabel2.pack()
    
def openHorror():
    horrorTheme = True
    westernTheme =False
    warTheme = False
    depressionTheme = False
    fantasyTheme = False
    Storylabel1.pack()
def openWar():
    warTheme = True
    westernTheme =False
    horrorTheme = False
    depressionTheme = False
    fantasyTheme = False
    Storylabel4.pack()
def openDepression():
    depressionTheme = True
    westernTheme =False
    horrorTheme = False
    warTheme = False
    fantasyTheme = False
    Storylabel3.pack()
def openFantasy():
    fantasyTheme = True
    westernTheme =False
    horrorTheme = False
    warTheme = False
    depressionTheme = False
    Storylabel5.pack()





root = Tk()
root.geometry("1920x1080")
root.title('madlib page')
root.config(bg='white')
root.withdraw()
#  creates the main page, used for printing the final results of the madlib

top1=Toplevel()
top1.geometry("1920x1080")
top1.title('Intro page')
top1.config(bg='White')
#  creates a top level w the purpose of an introducturay page in mind

top2=Toplevel()
top2.geometry("1920x1080")
top2.title('Display Page')
top2.config(bg='white')
top2.withdraw()
#  creates a top level w the purpose of user display configuration in mind

top3 = Toplevel()
top3.geometry("1920x1080")
top3.title('Enter Madlibs')
top3.config(bg='white')
top3.withdraw()
#  creates a top Level with the purpose of having the user input their words

Storylabel1 = Label(root, text="")
Storylabel2 = Label(root, text="")
Storylabel3 = Label(root, text="")
Storylabel4 = Label(root, text="")
Storylabel5 = Label(root, text="")

resetbutton = Button(top3, text="If pressed multiple themes or while replaying click here before continue", command=remove_text).place(x=10, y=10)

var = IntVar()
R1 = Radiobutton(top3, text="Horror Theme", variable=var, value=1,
                command=openHorror)
R1.place(x=10, y=50)

R2 = Radiobutton(top3, text="Western Theme", variable=var, value=2,
                command=openWestern)
R2.place(x=10, y=100)

R3 = Radiobutton(top3, text="Depression Theme", variable=var, value=3,
                command=openDepression)
R3.place(x=10, y=150)

R4 = Radiobutton(top3, text="Fantasy Theme", variable=var, value=4,
                command=openFantasy)
R4.place(x=10, y=200)

R5 = Radiobutton(top3, text="War Theme", variable=var, value=5,
                command=openWar)
R5.place(x=10, y=250)

themeButton1 = Button(top3, text='Wild West Theme', command=Changetextcolor, bg = "black", fg="white")
themeButton2 = Button(top3, text='Fantasy Adventure Theme', command=Changetextcolor, bg = "black", fg="white")
themeButton3 = Button(top3, text='Great Depression Theme', command=Changetextcolor, bg = "black", fg="white")
themeButton4 = Button(top3, text='Haunted House Theme', command=Changetextcolor, bg = "black", fg="white")
themeButton5 = Button(top3, text='Great War Madlib', command=Changetextcolor, bg = "black", fg="white")

introLabel = Label(top1, text=f'Mad Libs (a play on ad lib, from Latin ad libitum - as you wish)\n is a word game where one player prompts another for a list of words to substitute for blanks in a story;\n these word substitutions have a humorous effect when the resulting story is then read aloud.',
 bg='Black', fg='White', font='Times, 24')
introLabel.place(x='220', y='24')

myFont = font.Font(family='Times', size=20)

adjective1 = Entry(top3, bg='Black', fg='White', font='Times, 24', width=15)
adjective2 = Entry(top3, bg='Black', fg='White', font='Times, 24', width=15)
adjective3 = Entry(top3, bg='Black', fg='White', font='Times, 24', width=15)
adverb = Entry(top3, bg='Black', fg='White', font='Times, 24', width=15)
noun1 = Entry(top3, bg='Black', fg='White', font='Times, 24', width=15)
noun2 = Entry(top3, bg='Black', fg='White', font='Times, 24', width=15)
noun3 = Entry(top3, bg='Black', fg='White', font='Times, 24', width=15)
verb1 = Entry(top3, bg='Black', fg='White', font='Times, 24', width=15)
verb2 = Entry(top3, bg='Black', fg='White', font='Times, 24', width=15)
emotion = Entry(top3, bg='Black', fg='White', font='Times, 24', width=15)
place1 = Entry(top3, bg='Black', fg='White', font='Times, 24', width=15)
verbING = Entry(top3, bg='Black', fg='White', font='Times, 24', width=15)

adjective1label = Label(top3,text='Adjective', bg='Black', fg='White', font='Times, 24', width=15)
adjective2label = Label(top3,text='Adjective', bg='Black', fg='White', font='Times, 24', width=15)
adjective3label = Label(top3,text='Adjective', bg='Black', fg='White', font='Times, 24', width=15)
adverblabel = Label(top3,text='Adverb', bg='Black', fg='White', font='Times, 24', width=15)
noun1label = Label(top3, text='Noun', bg='Black', fg='White', font='Times, 24', width=15)
noun2label = Label(top3, text='Noun',bg='Black', fg='White', font='Times, 24', width=15)
noun3label = Label(top3, bg='Black',text='Noun', fg='White', font='Times, 24', width=15)
verb1label = Label(top3, bg='Black',text='Verb', fg='White', font='Times, 24', width=15)
verb2label = Label(top3, bg='Black',text='Verb', fg='White', font='Times, 24', width=15)
emotionlabel = Label(top3, bg='Black',text='Verb', fg='White', font='Times, 24', width=15)
place1label = Label(top3, bg='Black',text='Place', fg='White', font='Times, 24', width=15)
verbINGlabel = Label(top3, bg='Black',text='Verb(ing)', fg='White', font='Times, 24', width=15)

adjective1label.pack()
adjective1.pack()
adjective2label.pack()
adjective2.pack()
adjective3label.pack()
adjective3.pack()
adverblabel.pack()
adverb.pack()
noun1label.pack()
noun1.pack()
noun2label.pack()
noun2.pack()
noun3label.pack()
noun3.pack()
verb1label.pack()
verb1.pack()
verb2label.pack()
verb2.pack()
emotionlabel.pack()
emotion.pack()
place1label.pack()
place1.pack()
verbINGlabel.pack()
verbING.pack()

if top1==ACTIVE:
    time.sleep(10)
    top1.withdraw()
    


Displaylabel = Label(top2, text='Welcome to the display page this is where you can customize the application', fg='black', font='times, 27')
Displaylabel.place(x='360', y='24')

Buttonlabel1 = Label(top2, text='window color options', fg='black', font='times, 20')
Buttonlabel1.place(x='780', y='110')

Buttonlabel2 = Label(top2, text='button color options', fg='black', font='times, 20')
Buttonlabel2.place(x='785', y='220')

Buttonlabel3 = Label(top2, text='entry color options', fg='black', font='times, 20')
Buttonlabel3.place(x='785', y='330')

button = Button(top2, text='Choose Background Color', command=Changebackground, bg ="black", fg = "white")
button['font'] = myFont
button.place(x='470', y='150')

button1 = Button(top2, text='Choose Text Color', command=Changetextcolor, bg = "black", fg="white")
button1['font'] = myFont
button1.place(x='788', y='150')

button4 = Button(top2, text='Choose Text Background Color', command=Changetextbackgroundcolor, bg = "black", fg="white")
button4['font'] = myFont
button4.place(x='1023', y='150')

button2 = Button(top2, text='Choose Button Color', command=Changebuttonbackgroundcolor, bg = "black", fg="white")
button2['font'] = myFont
button2.place(x='650', y='260')

button3 = Button(top2, text='Choose Button Text Color', command=Changebuttontextcolor, bg = "black", fg="white")
button3['font'] = myFont
button3.place(x='913', y='260')

button5 = Button(top2, text='Choose Entry Text Color', command=Changeentrytextcolor, bg = "black", fg="white")
button5['font'] = myFont
button5.place(x='625', y='370')

button6 = Button(top2, text='Choose Entry Background Color', command=Changeentrybackgroundcolor, bg = "black", fg="white")
button6['font'] = myFont
button6.place(x='930', y='370')

introbutton = Button(top1, text='Continue to Enter Madlib', command=goEnterMadlib, bg='black', fg='white', width=40, font='Times, 24')
introbutton.pack(side=BOTTOM)

menu = Menu()
file= Menu(root, menu, tearoff=1, bg='White')
file.add_command(label='Display Page',command=goDisplay)
file.add_command(label='Intro Page',command=goIntro)
file.add_command(label='Enter Madlibs Page',command=goEnterMadlib)
file.add_command(label='Quit',command=root.destroy)
menu.add_cascade(label='File',menu=file)
root.config(menu=menu)
top1.config(menu=menu)
top2.config(menu=menu)
top3.config(menu=menu)
#  file menu

adjective1.bind('<Return>', enter)
adjective2.bind('<Return>', enter)
adjective3.bind('<Return>', enter)
adverb.bind('<Return>', enter)
noun1.bind('<Return>', enter)
noun2.bind('<Return>', enter)
noun3.bind('<Return>', enter)
place1.bind('<Return>', enter)
verb1.bind('<Return>', enter)
verb2.bind('<Return>', enter)
emotion.bind('<Return>', enter)
adverb.bind('<Return>', enter)
verbING.bind('<Return>', enter)

iconImage=PhotoImage(file= "madlib.png")
top1.iconphoto(False, iconImage)
top2.iconphoto(False, iconImage)
top3.iconphoto(False, iconImage)
root.iconphoto(False, iconImage)

newImage= Image.open('madlib.png')
resize = newImage.resize((800, 500), Image.Resampling.LANCZOS)
render= ImageTk.PhotoImage(resize)
label2 = Label(top1, image=render, bg='white')
label2.place(x=500, y=300)

quitButton = Button(root, text='Quit', command=root.destroy, bg = "black", fg="white")
quitButton['font'] = myFont
quitButton.pack(side=BOTTOM)

quitButton = Button(top3, text='Display Page', command=goDisplay, bg = "black", fg="white")
quitButton['font'] = myFont
quitButton.pack(side=RIGHT)

top1.attributes('-fullscreen', True)
top2.attributes('-fullscreen', True)
top3.attributes('-fullscreen', True)
root.attributes('-fullscreen', True)
top3.mainloop()
top1.mainloop()
top2.mainloop()
root.mainloop()

# adds all code to mainloop
